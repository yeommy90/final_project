<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.analysis.dao.AnalysisDAO">


	<select id="getRatingDistribution" parameterType="int"
		resultType="AnalysisDTO">
		select rating, count(*) as rating_cnt
		from RATING
		where member_id = #{member_id}
		group by rating
		order by rating
	</select>

	<select id="getPreferredGenre" parameterType="int" resultType="AnalysisDTO">
		SELECT g.name as genre_name, COUNT(r.rating) AS genreRating_cnt,
		((sum(r.rating) / (COUNT(r.rating) * 5)) * 100) AS total
		FROM
		genre g
		JOIN
		movie_genre mg ON g.genre_id = mg.genre_id
		JOIN
		RATING r ON r.movie_id = mg.movie_id
		WHERE
		r.member_id = #{member_id}
		GROUP BY
		g.genre_id,
		g.name
		ORDER BY
		total DESC,
		genreRating_cnt DESC


	</select>

	<select id="getPreferredDirector" parameterType="int" resultType="AnalysisDTO">
		SELECT D.NAME AS DIRECTOR_NAME, D.PROFILE_PATH AS DIRECTOR_IMAGE,
		COUNT(R.RATING) AS directorRating_cnt, ((SUM(R.RATING) /
		(COUNT(R.RATING) * 5)) * 100) AS TOTAL
		FROM MOVIE_DIRECTOR MD
		JOIN DIRECTOR D ON MD.DIRECTOR_ID = D.DIRECTOR_ID
		JOIN MOVIE M ON MD.MOVIE_ID = M.MOVIE_ID
		JOIN RATING R ON M.MOVIE_ID = R.MOVIE_ID
		WHERE R.MEMBER_ID = #{member_id}
		GROUP BY D.NAME, D.PROFILE_PATH
		ORDER BY TOTAL DESC, directorRating_cnt DESC
	</select>

	<select id="getPreferredActor" parameterType="int" resultType="AnalysisDTO">
		SELECT A.NAME AS ACTOR_NAME, A.PROFILE_PATH AS ACTOR_IMAGE,
		COUNT(R.RATING) AS actorRating_cnt, ((SUM(R.RATING) /
		(COUNT(R.RATING) * 5)) * 100) AS TOTAL
		FROM MOVIE_ACTOR MD
		JOIN ACTOR A ON MD.ACTOR_ID = A.ACTOR_ID
		JOIN MOVIE M ON MD.MOVIE_ID = M.MOVIE_ID
		JOIN RATING R ON M.MOVIE_ID = R.MOVIE_ID
		WHERE R.MEMBER_ID = #{member_id}
		AND A.PROFILE_PATH is not null
		GROUP BY A.NAME, A.PROFILE_PATH
		ORDER BY TOTAL DESC, actorRating_cnt DESC
	</select>

</mapper>